
============ LABEL 1 ======================== (label1.py)

#!/bin/python

_name=raw_input('WHAT IS YOUR NAME? ')
print 'Hello', _name, ', welcome to the workshop'



============ LABEL 2 ======================== (label1.py)

#!/bin/python

import sys

_name = sys.argv[1]
print 'Hello', _name, ', welcome to the workshop'


============ LABEL 3 ======================== (label3.py)

#!/bin/python
# script written by Olu for ags_technology training
# all rights reserved
# 11/05/2017

import sys

def cal_interest (p,t,r):
        return p*t*r/100

if __name__ == '__main__':
        interest = cal_interest (float(sys.argv[1]), int(sys.argv[2]), float(sys.argv[3]))
        print "Interest is calculated as %0.2f percent " % interest



============ LABEL 4 ======================== (label4.py)

#!/bin/python
# script written by Olu for ags_technology training
# all rights reserved
# 11/05/2017

import sys,datetime

def cal_interest (p,t,r):
        return p*t*r/100

def write_to_disk (data):
        text_file = open("data.txt", "w")
        time_stamp = datetime.datetime.utcnow().strftime('%Y%m%dT%H%M%SZ')
        text_file.write("Timestamp: %s \t  %s" % (time_stamp, data))
        text_file.close()

if __name__ == '__main__':
        interest = cal_interest (float(sys.argv[1]), int(sys.argv[2]), float(sys.argv[3]))
        print "Interest is calculated as %0.2f percent " % interest
        info = 'P = ' + sys.argv[1] +  ' T = ' + sys.argv[1] + ' R = ' + sys.argv[3]
        write_to_disk (info)







#Tasks

LABEL-2
display utility usage . Also, the script more robust by taking care of possible errors.. e.g. if user deos not provide an argument when executing the script

LABEL-3
Improve the output to display princial, time and rate, and the calculated interest.
Append output to data.txt instead of overwriting

LABEL-4
write every computed interest to a database table, instead of a file (mysql)


